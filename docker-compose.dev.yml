services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?schema=public
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  database:
    image: postgres:alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    external: false
